# ignore .patch from rsync, and any generated patch files from git-am
*.patch
# ignore local .config files
.config
# these are generated by make_patchnum.sh from git or from a .patchfile
.sha1
git_version.h
git_version.sh

# ignore bug*.pl
bug*.pl

# Exists during ./Configure
/UU
/host

# Tools for cross-compile remote testing:
/Cross/from-*
/Cross/mkdir
/Cross/run-*
/Cross/to-*

# files produced by './configure.gnu' on a Linux machine
/Makefile
/Policy.sh
/cflags
/config.h
/config.sh
/makeaperl
/makedepend
/makedir
/makefile
/myconfig
/opmini.c
/perlmain.c
/perlmini.c
/pod/Makefile
/preload
/runtests
/writemain
/x2p/Makefile
/x2p/cflags
/x2p/makefile

# generated for configuration overrides, eg Solaris
/config.over
/config.arch

# alternative names on OS X
/GNUmakefile
/x2p/GNUmakefile

# produced by dtrace -H when configured with usedtrace
perldtrace.h

# generated with -Duseffi
/have_ffi.h

# general build products
*.o
*.a
*.so
*.i
*.old
*.xsc

# general build products (darwin)
*.dylib

# general build products (Win32)
*.def
*.dll
*.exe
*.exp
*.ico
*.ilk
*.lib
*.obj
*.pdb
*.res
*.RES

# gcov build products. see L<perlhack/"GCC gcov Profiling">
*.gcov
*.gcda
*.gcno

dll.base
/ext/DynaLoader/dl_win32.xs
splittree.pl

# generated by make on cygwin
/cygwin.c

# ?
ext.libs

# these are scattered everywhere, ignore them
.exists
MYMETA.*

/miniperl
/perl
/perl.devel
/perl.devel.dSYM

/extra.pods
/generate_uudmap
/uni.data
/uudmap.h
/bitcount.h
/mg_data.h

# Build products that we can't infer are generated by conventional extensions
# (ie all the special cases that would take more code than just adding them
# here):
/have_ffi.h
lib/CORE/
lib/Config_git.pl
lib/Config_heavy.pl
lib/Config.pm
lib/Config.pod
lib/Config_mini.pl
lib/Config_xs_heavy.pl
ext/Config/Config.xs
lib/Cross.pm
lib/DynaLoader.pod
lib/ExtUtils/MANIFEST.SKIP
lib/ExtUtils/xsubpp
lib/XSLoader.pod
lib/Storable/Limit.pm
lib/auto/
lib/perldoc.pod
lib/buildcustomize.pl
lib/unicore/CombiningClass.pl
lib/unicore/Decomposition.pl
lib/unicore/Heavy.pl
lib/unicore/Name.pl
lib/unicore/Name.pm
lib/unicore/TestProp.pl
lib/unicore/To/
lib/unicore/UCD.pl
lib/unicore/lib/
lib/unicore/mktables.lst
lib/B/Stash.pm
lib/ByteLoader.pm

# generated by WinCE build
xlib/

# test byproducts
ext/Test-Harness/t/ext/
t/rantests
t/tmp*
t/perl
t/test_state
*.output
*.tmp
*.bak
t/*.ph
t/lib/*.ph

# t/op/require.t byproducts
t/bleah.pm
t/bleah.do
t/bleah.flg
t/urkkk.pm
t/urkkk.pmc
t/krunch.pm
t/krunch.pmc
t/whap.pm
t/whap.pmc

# make_ext.pl cleanup scripts
realclean.sh
veryclean.sh

# metaconfig needs these three symlinks
.package
U
MANIFEST.new

# this is used to auto-sort the MANIFEST
MANIFEST.srt

# ignore editor droppings
*.swp
*~
.#*

# test.valgrind final outputs, excluding intermediate files (pls report)
*.cachegrind
*.perf-stat
*.valgrind

# dont show .gdb_history files
.gdb_history

# cscope -b
cscope.out
# cscope -q
cscope.in.out
cscope.po.out

# generated by the top level install.html target. XXX Why does it need this?
/vms/README_vms.pod

# generated be ext/re/Makefile
ext/re/invlist_inline.h

# ctags
tags
TAGS
# gtags
/GPATH
/GRTAGS
/GTAGS
/gtags.conf
/gtags.files
/HTML

.git-rr-cache/DUMMY
log.test-*
log.bench-*
/benchres-*

# debugging helpers
/.gdb
/.gdbinit
/.perldb
/.valgrindrc
/valgrind.supp
/config.sh-*
/do-*.sh
/cov-int
perl.dSYM/
miniperl.dSYM/

# IDE workspace and project settings
.XCode/
.codelite/
.kdev4/
cperl.kdev4
cperl.project
cperl.workspace
cperl.xcodeproj/
cperl.xcworkspace/
/.analysis
.cquery
/.cquery_cached_index

# generated by Porting/sync-with-cpan
/make.log
