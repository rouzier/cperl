version: 5.29.0.{build}
#skip_tags: true
#os: MinGW
#os: Visual Studio 2015
#os: Default Azure
#build:
#  verbosity: minimal
max_jobs: 4
build:
  parallel: true
platform:
  - x64
  - x86
environment:
  matrix:
    - MINGW: 1
    - MSVC_VERSION: 10
    - CYGWIN: 1
    - MSVC_VERSION: 12
    - MSVC_VERSION: 14
    #- MSVC_VERSION: 14
    #  CFG: Debug
    #- MSVC_VERSION: 12
    #  CFG: Debug
    #- MINGW: 1
    #  CFG: Debug
matrix:
  exclude:
    - platform: x64
      MSVC_VERSION: 14
    - platform: x64
      MSVC_VERSION: 12
  allow_failures:
    - CYGWIN: 1
    - MINGW: 1
      CFG: Debug
clone_depth: 1
branches:
  only:
    - master
    - /^smoke/
    - /^maint-/
    - /^cperl-/
    - /^win/

init:
  - git config --global core.autocrlf input
  # Disable popups as they hang the build as there is nobody to click on the OK button...
  # Hanging the build is a lot less user friendly than reporting a build failure.
  #
  # Disable of system hard error popup
  # See: https://msdn.microsoft.com/en-us/library/bb513638%28VS.85%29.aspx
  - reg add "HKLM\SYSTEM\CurrentControlSet\Control\Windows" /f /v ErrorMode /d 2
  # Disable the following popup on program failure:
  #     |       ** <program name> has stopped working **        |
  #     | Windows can check online for a solution to the problem|
  #     |  - Check online for a solution and close the program  |
  #     |  - Close the program                                  |
  # See: https://msdn.microsoft.com/en-us/library/bb513638%28VS.85%29.aspx
  - reg add "HKLM\Software\Microsoft\Windows\Windows Error Reporting" /f /v DontShowUI /d 1  
  - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
  - if "%MINGW%"=="1" set PROCESSOR_ARCHITECTURE=%PLATFORM%
  - if "%PLATFORM%"=="x64" set PROCESSOR_ARCHITECTURE=AMD64
  #- if "%MINGW%"=="1" set PATH=%MSYS64%\bin;c:\Windows\system32;c:\Windows;C:\MinGW\msys\1.0\bin;c:\Windows\system32\Wbem;C:\MinGW\bin;C:\Program Files\Git\cmd
  - if "%MINGW%"=="1" cinst strawberryperl -i
  - if "%MINGW%"=="1" set PATH=c:\Windows\system32;c:\Windows;C:\strawberry\c\bin;C:\strawberry\perl\bin;c:\Windows\system32\Wbem;C:\Program Files\Git\cmd
  #- if "%MINGW%"=="1" rename c:\MinGW\lib lib.old
  #- if "%MINGW%"=="1" rename c:\MinGW\include include.old
  - if "%MINGW%"=="1" rename c:\MinGW MinGW.old
  - if "%MINGW%"=="1" set CCHOME=c:\strawberry\c & set MKOPT="CCHOME=c:\strawberry\c"
  - if "%CFG%"=="Debug" set
  - if "%PLATFORM%"=="x86" set WIN64=undef
  - if "%PLATFORM%"=="x86" set BITS=32
  - if "%PLATFORM%"=="x64" set BITS=64
  - set CYGR=c:\cygwin
  - set CYGSETUP=setup-x86
  - if "%PLATFORM%"=="x64" set CYGR=c:\cygwin64
  - if "%PLATFORM%"=="x64" set CYGSETUP=setup-x86_64
  - if "%CYGWIN%"=="1" set PATH=%CYGR%\bin;c:\Windows\system32;c:\Windows;c:\Windows\system32\Wbem
  - if "%CYGWIN%"=="1" wget -q https://cygwin.com/%CYGSETUP%.exe -O %CYGR%\%CYGSETUP%.exe
  - if "%CYGWIN%"=="1" chmod +x %CYGR%\%CYGSETUP%.exe
  - if "%CYGWIN%"=="1" %CYGR%\%CYGSETUP% -qnNdO -R %CYGR%
      -s http://cygwin.mirror.constant.com
      -l %CYGR%/var/cache/setup -P libffi-devel,libffi6,libgdbm-devel
  #- if not "%CYGWIN%"=="1" nuget install libffi
  #- cinst -y wget
  - if not "%CYGWIN%"=="1" set PATH=%PATH%;%CYGR%\bin
  #- if "%CYGWIN%"=="1" rm -rf 'c:\projects\cperl'

build_script:
  - if "%CYGWIN%"=="1" set PATH=%CYGR%\bin;c:\Windows\system32;c:\Windows;c:\Windows\system32\Wbem
  - if not "%CYGWIN%"=="1" wget -q https://github.com/perl11/cperl/releases/download/libffi-win/libffi-3.2.2dev-mingw%BITS%.tar.gz
  - if not "%CYGWIN%"=="1" tar xfz libffi-3.2.2dev-mingw%BITS%.tar.gz -C win32/
  - if not "%CYGWIN%"=="1" copy win32\bin\libffi*.dll .
  - if "%MINGW%"=="1"  gmake -s -C win32 %MKOPT%
  #- if "%CFG%"=="Debug" type config.sh
  - if "%CYGWIN%"=="1" sh ./Configure -des -Dusedevel & make

test_script:
  - ps: if ($env:MSVC_VERSION -gt 0) { $env:MSVC = 1 }
  - if "%MSVC%"=="1"   t\appveyor-smoke.bat
  - if "%CYGWIN%"=="1" make -s test
  - if "%MINGW%"=="1"  gmake -s -C win32 %MKOPT% test
  - if "%CFG%"=="Debug" exit
  #- if "%CYGWIN%"=="1" ./cperl -pi -e 's/\r\n/\n/g' Porting/appveyor-deploy.sh
  - if "%CYGWIN%"=="1" sh -c Porting/appveyor-deploy.sh
  - if "%MINGW%"=="1" rename c:\MinGW.old MinGW
  - if "%MINGW%"=="1" set PATH=c:\Windows\system32;c:\Windows;C:\strawberry\c\bin;C:\strawberry\perl\bin;c:\Windows\system32\Wbem;C:\MinGW\bin;C:\MinGW\msys\1.0\bin;
  - if "%MINGW%"=="1" sh -c Porting/appveyor-deploy.sh

# appveyor cannot glob * in names
artifacts:
  # nightlies
  - path: cperl-$(appveyor_build_version)-win32.exe
    name: nightly-vc32
    type: exe
  - path: cperl-$(appveyor_build_version)-win64.exe
    name: nightly-vc64
    type: exe
  - path: cperl-$(appveyor_build_version)-mingw-x86.tar.xz
    name: nightly-mw32
    type: tar
  - path: cperl-$(appveyor_build_version)-mingw-x64.tar.xz
    name: nightly-mw64
    type: tar
  - path: cperl-$(appveyor_build_version)-cygwin-x86.tar.xz
    name: nightly-cyg32
    type: tar
  - path: cperl-$(appveyor_build_version)-cygwin-x64.tar.xz
    name: nightly-cyg64
    type: tar
  # tagged
  - path: $(APPVEYOR_REPO_TAG_NAME)-win32.exe
    name: tagged-vc32
    type: exe
  - path: $(APPVEYOR_REPO_TAG_NAME)-win64.exe
    name: tagged-vc64
    type: exe
  - path: $(APPVEYOR_REPO_TAG_NAME)-cygwin-x86.tar.xz
    name: cygwin-32
    type: tar
  - path: $(APPVEYOR_REPO_TAG_NAME)-cygwin-x64.tar.xz
    name: cygwin-64
    type: tar
  - path: $(APPVEYOR_REPO_TAG_NAME)-mingw-x86.tar.xz
    name: mingw-32
    type: tar
  - path: $(APPVEYOR_REPO_TAG_NAME)-mingw-x64.tar.xz
    name: mingw-64
    type: tar

deploy:
- provider: GitHub
  tag: cperl-win-$(appveyor_build_version)
  description: 'cperl windows nightly'
  auth_token:
    secure: AsIAOIgCJX0QhrUKal2V00aaB5nRWtmtFTFeDVsGnbJLeEQpv9avUp0HT1cA8bNs
  artifact: nightly-mw32,nightly-mw64,nightly-vc32,nightly-vc64,nightly-cyg32,nightly-cyg64
  draft: true
  prerelease: true
  force_update: true
  on:
    branch: /(master|relprep|cperl-tag-deploy-test|maint-5)/
- provider: GitHub
  tag: $(APPVEYOR_REPO_TAG_NAME)-win
  description: 'cperl windows tagged'
  auth_token:
    secure: AsIAOIgCJX0QhrUKal2V00aaB5nRWtmtFTFeDVsGnbJLeEQpv9avUp0HT1cA8bNs
  artifact: mingw-32,mingw-64,cygwin-32,cygwin-64,tagged-vc32,tagged-vc64
  draft: true
  force_update: true
  on:
    appveyor_repo_tag: true

notifications:
- provider: Email
  to:
  - rurban@cpan.org
  subject: cperl windows build
  on_build_success: true
  on_build_failure: true
  on_build_status_changed: false
