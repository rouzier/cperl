__END__
# NAME goto into foreach
no warnings 'deprecated';
goto f;
foreach(1){f:}
EXPECT
Can't "goto" into the middle of a foreach loop at - line 3.
########
# NAME goto into given
no warnings 'deprecated';
goto f;
CORE::given(1){f:}
EXPECT
Can't "goto" into a "given" block at - line 3.
########
# NAME goto from given topic expression
no warnings 'deprecated';
CORE::given(goto f){f:}
EXPECT
Can't "goto" into a "given" block at - line 2.
########
# NAME goto into expression
no warnings 'deprecated';
eval { goto a; 1 + do { a: } }; warn $@;
eval { goto b; meth { b: }   }; warn $@;
eval { goto c; map { c: } () }; warn $@;
eval { goto d; f(do { d: })  }; die  $@;
EXPECT
Can't "goto" into a binary or list expression at - line 2.
Can't "goto" into a binary or list expression at - line 3.
Can't "goto" into a binary or list expression at - line 4.
Can't "goto" into a binary or list expression at - line 5.
########
# NAME goto with computed label
my $label = "foo";
goto $label;
EXPECT
Can't find label foo at - line 2.
########
# NAME dump with computed label
my $label = "foo";
dump $label;
EXPECT
Can't find label foo at - line 2.
########
# NAME when outside given
use 5.01; no warnings 'experimental::smartmatch';
when(undef){}
EXPECT
Can't "when" outside a topicalizer at - line 2.
########
# NAME default outside given
use 5.01;
default{}
EXPECT
Can't "default" outside a topicalizer at - line 2.
########
# NAME Only map pairs in hash assignment
use strict; my %h = map{$_ => (1,2)} (0..1);
EXPECT
Only pair in map hash assignment allowed while "strict hashpairs", got 3 elements at - line 1.
########
# NAME Only map pairs in hash assignment
use strict; my %h = map{$_} (0..1);
EXPECT
Only pair in map hash assignment allowed while "strict hashpairs", got 1 elements at - line 1.
########
# NAME Only single map pairs in hash assignment
use strict; my %h = map{$_ => 1, $_+1 => 2} (0..1);
EXPECT
Only pair in map hash assignment allowed while "strict hashpairs", got 4 elements at - line 1.
